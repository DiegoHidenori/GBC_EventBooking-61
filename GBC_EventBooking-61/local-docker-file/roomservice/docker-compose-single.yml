# ---------------------------------------------------------------------------------------------------------------------
# SINGLE CREATION

# This command starts the containers in detached mode without rebuilding the images if they already exist
# docker-compose -p room-service-single -f docker-compose-single.yml up -d

# This command rebuilds images even if they exist
# docker-compose -p room-service-single -f docker-compose-single.yml up -d --build

# This command stops and removes containers and volumes
# docker-compose -p room-service-single -f docker-compose-single.yml down -v

# ---------------------------------------------------------------------------------------------------------------------

#version: '3.9'

services:


  # when room-service-postgres is instantiated the first time,
  # it looks for init scripts in the {docker-entrypoint-initdb.d} folder
  # LEFT SIDE OF THE ":" IS THE HOST MACHINE. REAL WORLD.
  # RIGHT SIDE OF THE ":" IS THE CONTAINER WORLD
  room-service-postgres:
    image: postgres
    container_name: room-service-postgres-single
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
#      - POSTGRES_DB=room-service  # Use when don't want to manually create the init.sql file?

    volumes:
      - ./data:/var/lib/postgresql/data
      - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spring

  room-service-pgadmin:
    image: dpage/pgadmin4
    container_name: room-service-pgadmin4-single
    ports:
      - "8888:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@domain.ca
      - PGADMIN_DEFAULT_PASSWORD=password
    networks:
      - spring

networks:
  spring:
    driver: bridge